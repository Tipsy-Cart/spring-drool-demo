package rules.Invoice

import com.demo.controller.JsonFact
import com.jayway.jsonpath.DocumentContext;
import java.util.List;
import com.jayway.jsonpath.JsonPath;

global com.demo.beanOne.ValidationResult results;
global com.demo.controller.JsonHelper jsonHelper;

dialect "java"

rule "Extract Line Items"
when
    $ctx : DocumentContext()
    $lineItems : List() from collect (Object() from jsonHelper.readList($ctx, "$.lineItems"))
then
    for(int i = 0; i<$lineItems.size(); i++)
    {
        DocumentContext lineCtx = jsonHelper.parse($lineItems.get(i));
        insertLogical(new JsonFact("LineItem",i,lineCtx));
    }
end

rule "Line Item Net Price"
when
    $fact : JsonFact(type == "LineItem")
    $ctx : DocumentContext() from $fact.getContext()
    $index : Integer() from $fact.getIndex()
    $price : Double() from $ctx.read("$.price", Double.class)
    $discount : Double() from $ctx.read("$.discount", Double.class)
    $netPrice : Double() from $ctx.read("$.netPrice", Double.class)
    eval( $netPrice != ($price - $discount))
then
   results.put("lineItem[" + $index + "].netPrice", "Net Price is Incorrect");
end