package rules.Invoice

import com.demo.controller.JsonFact
import com.jayway.jsonpath.DocumentContext;
import java.util.List;
import com.jayway.jsonpath.JsonPath;

global com.demo.beanOne.ValidationResult results;
global com.demo.controller.JsonHelper jsonHelper;

dialect "java"

rule "Extract Line Items"
when
    $invoiceCtx : DocumentContext()
    $lineItems : List() from collect (Object() from jsonHelper.readList($invoiceCtx,"$.lineItems"))
then
    for(int i = 0; i<$lineItems.size(); i++) {
        jsonHelper.log("LineItem : Adding Line Item " + i);
        DocumentContext itemCtx = jsonHelper.parse($lineItems.get(i));
        insert(new JsonFact("LineItem",i,itemCtx));
    }
end

rule "Net Price Check"
when
    $itemFact : JsonFact(type == "LineItem")
    $itemCtx : DocumentContext() from $itemFact.getContext()
    $itemIndex : Integer() from $itemFact.getIndex()
    $price : Double() from jsonHelper.readDouble($itemCtx,"$.price")
    $discount : Double() from jsonHelper.readDouble($itemCtx,"$.discount")
    $netPrice : Double() from jsonHelper.readDouble($itemCtx,"$.netPrice")
    eval(jsonHelper.log("LineItem : " + $itemIndex + " Net Price " + $netPrice + " Discount " + $discount + " Price " + $price))
    eval(!$netPrice.equals($price - $discount))
then
   results.put("lineItem[" + $itemIndex + "].netPrice ", "Incorrect net price");
end

rule "Taxable Amount Check"
when
    $itemFact : JsonFact(type == "LineItem")
    $itemCtx : DocumentContext() from $itemFact.getContext()
    $itemIndex : Integer() from $itemFact.getIndex()
    $netPrice : Double() from jsonHelper.readDouble($itemCtx,"$.netPrice")
    $quantity : Double() from jsonHelper.readDouble($itemCtx,"$.quantity")
    $itemCharge : Double() from jsonHelper.readDouble($itemCtx,"$.itemCharge")
    $itemAllowance : Double() from jsonHelper.readDouble($itemCtx,"$.itemAllowance")
    $taxableAmount : Double() from jsonHelper.readDouble($itemCtx,"$.taxableAmount")
    eval(jsonHelper.log("LineItem : " + $itemIndex + " Net Price " + $netPrice + " Quantity " + $quantity + " Charge " + $itemCharge + " Allowance " + $itemAllowance + " Taxable Amount " + $taxableAmount))
    eval(!$taxableAmount.equals(($netPrice * $quantity) + $itemCharge - $itemAllowance))
then
   results.put("lineItem[" + $itemIndex + "].taxableAmount ", "Incorrect taxable amount");
end

rule "Total Tax Amount Check"
when
    $itemFact : JsonFact(type == "LineItem")
    $itemCtx : DocumentContext() from $itemFact.getContext()
    $itemIndex : Integer() from $itemFact.getIndex()
    $itemTotalTax : Double() from jsonHelper.readDouble($itemCtx,"$.itemTotalTax")
    $taxAmounts : List() from collect (Object() from jsonHelper.readList($itemCtx, "$.taxes[*].taxAmount"))
    $totalTax : Double() from jsonHelper.sum($taxAmounts)
    eval(jsonHelper.log("LineItem : " + $itemIndex + " Total Tax " + $totalTax))
    eval(!$itemTotalTax.equals($totalTax))
then
   results.put("lineItem[" + $itemIndex + "].itemTotalTax ", "Incorrect total tax amount");
end

rule "Total Amount Check"
when
    $itemFact : JsonFact(type == "LineItem")
    $itemCtx : DocumentContext() from $itemFact.getContext()
    $itemIndex : Integer() from $itemFact.getIndex()
    $taxableAmount : Double() from jsonHelper.readDouble($itemCtx,"$.taxableAmount")
    $itemTotalTax : Double() from jsonHelper.readDouble($itemCtx,"$.itemTotalTax")
    $itemTotalAmount : Double() from jsonHelper.readDouble($itemCtx,"$.itemTotalAmount")
    eval(!$itemTotalAmount.equals($taxableAmount + $itemTotalTax))
then
   results.put("lineItem[" + $itemIndex + "].itemTotalAmount ", "Incorrect item total amount");
end

rule "Total Payable Amount Check"
when
    $itemFact : JsonFact(type == "LineItem")
    $itemCtx : DocumentContext() from $itemFact.getContext()
    $itemIndex : Integer() from $itemFact.getIndex()
    $itemTotalAmount : Double() from jsonHelper.readDouble($itemCtx,"$.itemTotalAmount")
    $prepaidAmount : Double() from jsonHelper.readDouble($itemCtx,"$.prepaidAmount")
    $totalPayableAmount : Double() from jsonHelper.readDouble($itemCtx,"$.totalPayableAmount")
    eval(!$totalPayableAmount.equals($itemTotalAmount - $prepaidAmount))
then
   results.put("lineItem[" + $itemIndex + "].totalPayableAmount ", "Incorrect Item Total Payable Amount");
end